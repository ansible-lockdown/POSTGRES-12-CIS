---

- name: "4.5 | AUDIT | Use pg_permission extension to audit object permissions"
  block:
      - name: "4.5 | AUDIT | Use pg_permission extension to audit object permissions | Get pg_permission status"
        ansible.builtin.shell: psql -c "select t.schemaname, t.tablename, u.usename, has_table_privilege(u.usename, t.tablename, 'select') as select, has_table_privilege(u.usename, t.tablename, 'insert') as insert, has_table_privilege(u.usename, t.tablename, 'update') as update, has_table_privilege(u.usename, t.tablename, 'delete') as delete from pg_tables t, pg_user u where t.schemaname not in ('information_schema','pg_catalog');" | grep rows | tr -d '()'
        changed_when: false
        failed_when: false
        become_user: "{{ pgs12cis_pgs12_usr }}"
        register: pgs12cis_4_5_pg_permission_status

      - name: "4.5 | AUDIT | Use pg_permission extension to audit object permissions | Alert on not available | Absent"
        ansible.builtin.debug:
            msg:
                - "Warning!! You do not have the pg_permission module installed and this this is a finding"
                - "Please review and install the pg_permission module then configure as needed. This is a manual task."
        when: "'0 rows' in pgs12cis_4_5_pg_permission_status.stdout"

      - name: "4.5 | AUDIT | Use pg_permission extension to audit object permissions | Warning on available"
        ansible.builtin.debug:
            msg: "Good News! You have the module available for use. Please make sure it configured correctly"
        when: "'0 rows' not in pgs12cis_4_5_pg_permission_status.stdout"

      - name: "4.5 | AUDIT | Use pg_permission extension to audit object permissions | Present"
        ansible.builtin.import_tasks: warning_facts.yml
  vars:
      warn_control_id: '4.5'
  when:
      - pgs12cis_rule_4_5
  tags:
      - level1-postgresql
      - audit
      - rule_4.5
